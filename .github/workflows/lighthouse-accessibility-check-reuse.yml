name: Lighthouse Reuse CI

on:
  workflow_dispatch:
env:
  urls: ""
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Lighthouse
        run: |
          npm install -g lighthouse

      - name: Fetch Product Data and Generate URLs
        run: |
          API_URL="https://market.axonivy.com/marketplace-service/api/product?type=all&language=en&size=2&isRESTClient=false"
          BASE_URL="https://market.axonivy.com"

          # Fetch API response
          RESPONSE=$(curl -s "$API_URL")

          # Generate the list of URLs and save them to a file
          echo "$BASE_URL" > urls.txt
          echo "$RESPONSE" | jq -r '.["_embedded"]["products"][]["id"]' | while read id; do
            echo "$BASE_URL/$id" >> urls.txt
          done

          # Join all lines in urls.txt into a single string, with each URL on a new line
          URLs=$(cat urls.txt | tr '\n' ',')
          URLs="${URLs%,}"
          # Save the URLs to the environment variable for later use
          echo "urls=$URLs" >> $GITHUB_ENV
      - run: mkdir -p ${{ github.workspace }}/tmp/artifacts
      - name: Lighthouse
        uses: foo-software/lighthouse-check-action@master
        with:
          outputDirectory: ${{ github.workspace }}/tmp/artifacts
          urls: ${{ env.urls }}

      - name: Generate HTML Summary
        run: |
          # Path to the result.json file from the Lighthouse report
          RESULTS_FILE="${{ github.workspace }}/tmp/artifacts/results.json"
          
          # Create an empty HTML summary file
          echo "<html>
          <head>
            <title>Lighthouse Audit Summary</title>
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; }
              h1, h2 { color: #333; }
              table { width: 100%; border-collapse: collapse; margin: 20px 0; }
              table, th, td { border: 1px solid #ddd; }
              th, td { padding: 10px; text-align: left; cursor: pointer; }
              th { background-color: #f4f4f4; }
              tr:nth-child(even) { background-color: #f9f9f9; }
            </style>
            <script>
              function sortTable(columnIndex) {
                const table = document.getElementById('auditTable');
                const rows = Array.from(table.rows).slice(1);
                const isAscending = table.dataset.sortOrder === 'asc';
                
                rows.sort((a, b) => {
                  const cellA = a.cells[columnIndex].innerText;
                  const cellB = b.cells[columnIndex].innerText;
                  return isAscending
                    ? cellA.localeCompare(cellB, undefined, { numeric: true })
                    : cellB.localeCompare(cellA, undefined, { numeric: true });
                });

                table.dataset.sortOrder = isAscending ? 'desc' : 'asc';
                rows.forEach(row => table.appendChild(row));
              }
            </script>
          </head>
          <body>
          <h1>Lighthouse Audit Summary</h1>
          <p>This page lists the Lighthouse audit results for various pages. Click on the column headers to sort.</p>
          <table id=\"auditTable\" data-sort-order=\"asc\">
            <thead>
              <tr>
                <th onclick=\"sortTable(0)\">URL</th>
                <th onclick=\"sortTable(1)\">Performance</th>
                <th onclick=\"sortTable(2)\">Accessibility</th>
                <th onclick=\"sortTable(3)\">Best Practices</th>
                <th onclick=\"sortTable(4)\">SEO</th>
                <th>Report</th>
              </tr>
            </thead>
            <tbody>
          " > $SUMMARY_FILE

          # Read and parse the JSON file, sorting URLs alphabetically
          jq -r '.[] | "\(.url),\(.scores.performance),\(.scores.accessibility),\(.scores.bestPractices),\(.scores.seo),\(.localReport)"' $RESULTS_FILE | sort -t, -k1,1 | while IFS=, read -r url performance accessibility bestPractices seo localReport; do
            reportFile=$(basename "$localReport")

            echo "<tr>
              <td><a href=\"$reportFile\">$url</a></td>
              <td>$performance</td>
              <td>$accessibility</td>
              <td>$bestPractices</td>
              <td>$seo</td>
              <td><a href=\"$reportFile\">View Report</a></td>
            </tr>" >> $SUMMARY_FILE
          done

          echo "</tbody>
          </table>
          </body>
          </html>" >> $SUMMARY_FILE

          echo "Summary HTML generated at $SUMMARY_FILE"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Lighthouse reports
          path: ${{ github.workspace }}/tmp/artifacts

