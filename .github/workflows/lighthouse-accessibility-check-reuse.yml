name: Lighthouse Reuse CI

on:
  workflow_dispatch:

env:
  API_URL: "https://market.axonivy.com/marketplace-service/api/product?type=all&language=en&isRESTClient=false"
  BASE_URL: "https://market.axonivy.com"
  BATCH_SIZE: 10

jobs:
  fetch-urls:
    runs-on: ubuntu-latest
    outputs:
      urls_batches: ${{ steps.collect-urls.outputs.urls_batches }}
    steps:
      - name: Fetch Product IDs in Batches
        id: collect-urls
        run: |
          PAGE=0
          URLS_BATCHES="[]"

          while true; do
            RESPONSE=$(curl -s "$API_URL&size=$BATCH_SIZE&page=$PAGE&sort=alphabetically")
            PRODUCTS=$(echo "$RESPONSE" | jq -r '._embedded.products[].id // empty')

            if [ -z "$PRODUCTS" ]; then
              echo "No more products found. Stopping."
              break
            fi
            BATCH_URLS=$(echo "$PRODUCTS" | jq -R -s -c --arg base_url "$BASE_URL" 'split("\n") | map(select(. != "")) | map("\($base_url)/\(.)") | join(",")')
            echo "Batch $PAGE: $BATCH_URLS"
            URLS_BATCHES=$(echo "$URLS_BATCHES" | jq --arg batch "$BATCH_URLS" '. + [$batch]')
            PAGE=$((PAGE + 1))
          done
          URLS_BATCHES=$(echo "$URLS_BATCHES" | jq -c 'map(fromjson)')
          echo "urls_batches=$URLS_BATCHES" >> "$GITHUB_OUTPUT"

  lighthouse:
    needs: fetch-urls
    runs-on: ubuntu-latest
    strategy:
      matrix:
        batch: ${{ fromJson(needs.fetch-urls.outputs.urls_batches) }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Lighthouse
        run: |
          npm install -g lighthouse

      - name: Run Lighthouse Audit
        run: |
          mkdir -p ${{ github.workspace }}/tmp/artifacts
          lighthouse --urls ${{ matrix.batch }} --output json --output-path ${{ github.workspace }}/tmp/artifacts/results-${{ matrix.batch }}.json

      - name: Upload Batch Results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results-${{ strategy.job-index }}
          path: ${{ github.workspace }}/tmp/artifacts/results-${{ strategy.job-index }}.json

  generate-summary:
    needs: lighthouse
    runs-on: ubuntu-latest
    steps:
      - name: Download Batch Results
        uses: actions/download-artifact@v4
        with:
          name: urls_batches

      - name: Generate Lighthouse Summary
        run: |
          SUMMARY_FILE="${{ github.workspace }}/tmp/artifacts/lighthouse-summary.html"
          mkdir -p $(dirname "$SUMMARY_FILE")

          echo "<html><head><title>Lighthouse Summary</title></head><body><h1>Audit Summary</h1><table><tr><th>URL</th><th>Performance</th><th>Accessibility</th><th>Best Practices</th><th>SEO</th><th>Report</th></tr>" > $SUMMARY_FILE

          for FILE in ${{ github.workspace }}/tmp/artifacts/results-*.json; do
            jq -r '.[] | "<tr><td>\(.url)</td><td>\(.scores.performance)</td><td>\(.scores.accessibility)</td><td>\(.scores.bestPractices)</td><td>\(.scores.seo)</td><td><a href=\(.localReport)>Report</a></td></tr>"' "$FILE" >> $SUMMARY_FILE
          done

          echo "</table></body></html>" >> $SUMMARY_FILE