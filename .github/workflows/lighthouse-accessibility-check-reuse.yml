name: Lighthouse Reuse CI

on:
  workflow_dispatch:

env:
  API_URL: "https://market.axonivy.com/marketplace-service/api/product?type=all&language=en&isRESTClient=false"
  BASE_URL: "https://market.axonivy.com"
  BATCH_SIZE: 10

jobs:
  fetch-urls:
    runs-on: ubuntu-latest
    outputs:
      urls_batches: ${{ steps.collect-urls.outputs.urls_batches }}
    steps:
      - name: Fetch Product IDs in Batches
        id: collect-urls
        run: |
          PAGE=0
          URLS_BATCHES="[]"

          while true; do
            RESPONSE=$(curl -s "$API_URL&size=$BATCH_SIZE&page=$PAGE&sort=alphabetically")
            PRODUCTS=$(echo "$RESPONSE" | jq -r '._embedded.products[].id // empty')

            if [ -z "$PRODUCTS" ]; then
              echo "No more products found. Stopping."
              break
            fi
            BATCH_URLS=$(echo "$PRODUCTS" | jq -R -s -c --arg base_url "$BASE_URL" 'split("\n") | map(select(. != "")) | map("\($base_url)/\(.)") | join(",")')
            echo "Batch $PAGE: $BATCH_URLS"
            URLS_BATCHES=$(echo "$URLS_BATCHES" | jq --arg batch "$BATCH_URLS" '. + [$batch]')
            PAGE=$((PAGE + 1))
          done
          URLS_BATCHES=$(echo "$URLS_BATCHES" | jq -c 'map(fromjson)')
          echo "urls_batches=$URLS_BATCHES" >> "$GITHUB_OUTPUT"

  lighthouse:
    needs: fetch-urls
    runs-on: ubuntu-latest
    strategy:
      matrix:
        batch: ${{ fromJson(needs.fetch-urls.outputs.urls_batches) }}
    steps:
      - run: |
          echo "Batch URLs: ${{ matrix.batch }}"