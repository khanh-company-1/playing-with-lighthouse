name: Lighthouse CI

on:
  workflow_dispatch:

jobs:
  fetch-and-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Lighthouse
        run: |
          npm install -g lighthouse

      - name: Fetch Product Data and Generate URLs
        id: fetch-products
        run: |
          API_URL="https://market.axonivy.com/marketplace-service/api/product?type=all&language=en&size=1000&isRESTClient=false"
          BASE_URL="https://market.axonivy.com"

          # Fetch API response
          RESPONSE=$(curl -s $API_URL)
          
          # Build the list of URLs
          echo "$BASE_URL" > urls.txt
          echo $RESPONSE | jq -r '.["_embedded"]["products"][]["id"]' | while read id; do
            echo "$BASE_URL/$id" >> urls.txt
          done

      - name: Split URLs into Batches
        id: split-urls
        run: |
          split -l 20 urls.txt batch_
          echo "BATCHES=$(ls batch_ | tr '\n' ',')" >> $GITHUB_ENV
        env:
          BATCH_SIZE: 20

  lighthouse-audit:
    needs: fetch-and-audit
    strategy:
      matrix:
        batch: ${{ fromJson(env.BATCHES) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Lighthouse
        run: |
          npm install -g lighthouse

      - name: Run Lighthouse for Batch
        env:
          REPORT_DIR: "./lighthouse-reports"
        run: |
          mkdir -p $REPORT_DIR
          while read url; do
            if [ "$url" = "https://market.axonivy.com" ]; then
              REPORT_NAME="home"
            else
              REPORT_NAME=$(echo $url | sed 's|https://market.axonivy.com/||; s|/|-|g')
            fi
            lighthouse $url --output html --output-path $REPORT_DIR/$REPORT_NAME.html --chrome-flags="--headless"
          done < batch_${{ matrix.batch }}

      - name: Upload Lighthouse Reports for Batch
        uses: actions/upload-artifact@v4
        with:
          path: lighthouse-reports/
          name: lighthouse-reports-${{ matrix.batch }}